name: Build and Release WT9011 DLL

on:
  push:
    tags:
      - 'v*.*.*' # Триггер на теги вроде v1.0.0

jobs:
  build:
    runs-on: windows-latest # Используем Windows для сборки DLL

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11' # Укажите нужную версию Python

    - name: Install Python dependencies
      run: |
        & "C:\hostedtoolcache\windows\Python\3.11.9\x64\python.exe" -m pip install --upgrade pip
        & "C:\hostedtoolcache\windows\Python\3.11.9\x64\python.exe" -m pip install pybind11 bleak
      shell: pwsh # Используем стандартный PowerShell 7

    - name: Install CMake
      uses: jwlawson/actions-setup-cmake@v1.13
      with:
        cmake-version: '3.22.x' # Обновлено до версии, поддерживающей VS 2022

    - name: Create build directory and build
      run: |
        mkdir build
        cd build
        cmake -G "Visual Studio 17 2022" -A x64 .. || cmake -G "Visual Studio 16 2019" -A x64 ..
        cmake --build . --config Release
      shell: pwsh # Используем стандартный PowerShell 7 вместо кастомного wrapper

    - name: Copy Python files to lib directory
      run: |
        mkdir build\Release\lib
        copy lib\*.py build\Release\lib\
      shell: C:\Program Files\PowerShell\7\pwsh.EXE -command ". '{0}'"

    - name: Package release
      run: |
        cd build\Release
        7z a wt9011_release.zip wt9011_dll.dll lib\*.py
      shell: C:\Program Files\PowerShell\7\pwsh.EXE -command ". '{0}'"

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: build/Release/wt9011_release.zip
        fail_on_unmatched_files: true
      env:
        GITHUB_TOKEN: ${{ secrets.GH_PAT }}