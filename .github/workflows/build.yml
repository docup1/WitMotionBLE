name: Build DLL and Qt Example

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pybind11

      - name: Install Qt and CMake dependencies (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          sudo apt update || true
          sudo apt install -y cmake ninja-build qtbase5-dev qtdeclarative5-dev || true

      - name: Install CMake (Windows)
        if: runner.os == 'Windows'
        uses: lukka/get-cmake@latest

      - name: Configure CMake
        run: |
          cmake -S dll_lib -B build -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: |
          cmake --build build --config Release

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: wt9011-${{ matrix.os }}
          path: |
            build/*.dll
            build/*.so
            build/*.dylib
            build/*.exe
            build/*.app
            build/example*

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/**/*
